{"ast":null,"code":"import * as types from \"./actionTypes\";\nconst initstate = {\n  cart: []\n};\n\nconst reducer = (state = initstate, action) => {\n  switch (action.type) {\n    case types.ADD_CART_ITEM:\n      return {\n        cart: [...state.cart, action.payload]\n      };\n\n    case types.INCREMENT_QTY:\n      let new_cart = state.cart.map(item => item._id === action.payload ? { ...item,\n        qty: item.qty + 1\n      } : item);\n      return {\n        cart: new_cart\n      };\n\n    case types.DECREMENT_QTY:\n      let dec_cart = state.cart.map((item, i) => item._id === action.payload ? { ...item,\n        qty: item.qty - 1\n      } : item);\n      dec_cart = dec_cart.filter(item => item.qty > 0);\n      return {\n        cart: dec_cart\n      };\n\n    case types.EMPTY_CART:\n      return {\n        cart: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["F:/node/SwiggyClone-main/SwiggyClone-main/frontend/src/Components/MenuPage/Redux/reducer.js"],"names":["types","initstate","cart","reducer","state","action","type","ADD_CART_ITEM","payload","INCREMENT_QTY","new_cart","map","item","_id","qty","DECREMENT_QTY","dec_cart","i","filter","EMPTY_CART"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AADU,CAAlB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,SAAT,EAAoBI,MAApB,KAA+B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,aAAX;AACE,aAAO;AAAEL,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACG,OAAvB;AAAR,OAAP;;AAEF,SAAKR,KAAK,CAACS,aAAX;AACE,UAAIC,QAAQ,GAAGN,KAAK,CAACF,IAAN,CAAWS,GAAX,CAAgBC,IAAD,IAC5BA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAApB,GAA8B,EAAE,GAAGI,IAAL;AAAWE,QAAAA,GAAG,EAAEF,IAAI,CAACE,GAAL,GAAW;AAA3B,OAA9B,GAA+DF,IADlD,CAAf;AAGA,aAAO;AAAEV,QAAAA,IAAI,EAAEQ;AAAR,OAAP;;AACF,SAAKV,KAAK,CAACe,aAAX;AACE,UAAIC,QAAQ,GAAGZ,KAAK,CAACF,IAAN,CAAWS,GAAX,CAAe,CAACC,IAAD,EAAOK,CAAP,KAC5BL,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAApB,GAA8B,EAAE,GAAGI,IAAL;AAAWE,QAAAA,GAAG,EAAEF,IAAI,CAACE,GAAL,GAAW;AAA3B,OAA9B,GAA+DF,IADlD,CAAf;AAGAI,MAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAiBN,IAAD,IAAUA,IAAI,CAACE,GAAL,GAAW,CAArC,CAAX;AACA,aAAO;AAAEZ,QAAAA,IAAI,EAAEc;AAAR,OAAP;;AACF,SAAKhB,KAAK,CAACmB,UAAX;AACE,aAAO;AAAEjB,QAAAA,IAAI,EAAE;AAAR,OAAP;;AACF;AACE,aAAOE,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import * as types from \"./actionTypes\";\n\nconst initstate = {\n  cart: [],\n};\n\nconst reducer = (state = initstate, action) => {\n  switch (action.type) {\n    case types.ADD_CART_ITEM:\n      return { cart: [...state.cart, action.payload] };\n\n    case types.INCREMENT_QTY:\n      let new_cart = state.cart.map((item) =>\n        item._id === action.payload ? { ...item, qty: item.qty + 1 } : item\n      );\n      return { cart: new_cart };\n    case types.DECREMENT_QTY:\n      let dec_cart = state.cart.map((item, i) =>\n        item._id === action.payload ? { ...item, qty: item.qty - 1 } : item\n      );\n      dec_cart = dec_cart.filter((item) => item.qty > 0);\n      return { cart: dec_cart };\n    case types.EMPTY_CART:\n      return { cart: [] };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}