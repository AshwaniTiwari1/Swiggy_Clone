{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\node\\\\SwiggyClone-main\\\\SwiggyClone-main\\\\frontend\\\\src\\\\Components\\\\CheckoutPage\\\\Customer\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, GeolocateControl, NavigationControl } from 'react-map-gl';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nconst Loc = styled.img`\n    height: 20px;\n    width: 20px;\n`;\n_c = Loc;\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZmFoZHNoYWlraCIsImEiOiJja2gzYzB3a3YwaXlsMnJvaWJ3ZDdiYzBpIn0.EC5-vAFFL-32D0ZCkCkQFg';\n\nconst Map = () => {\n  _s();\n\n  const [customerCoords, setCustomerCoords] = useState({});\n  const [placeName, setPlaceName] = useState('');\n  const data = JSON.parse(localStorage.getItem('Coordinates')); // Area Search Coordinates\n\n  const [viewPort, setViewPort] = useState({\n    width: 'inherit',\n    height: 'inherit',\n    latitude: data.lat,\n    // 18.634363666666665  initially showing  Area Search Coordinates\n    longitude: data.long,\n    // 73.78761533333333\n    zoom: 10\n  });\n  const geolocateStyle = {\n    position: 'absolute',\n    right: -3,\n    bottom: 30,\n    margin: 10\n  };\n  const navStyle = {\n    position: 'absolute',\n    right: -3,\n    bottom: 70,\n    margin: 10\n  }; // console.log(customerCoords);\n\n  useEffect(() => {\n    Geolocation(customerCoords);\n  }, [customerCoords]);\n\n  const Geolocation = data => {\n    var config = {\n      method: 'get',\n      url: `https://api.mapbox.com/geocoding/v5/mapbox.places/${data.long},${data.lat}.json?country=IN&access_token=${MAPBOX_TOKEN}`,\n      headers: {}\n    };\n    axios(config).then(function (response) {\n      console.log('Geolocation', response.data);\n      getLocation(response.data.features);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const getLocation = data => {\n    data.map((item, i) => {\n      if (i === 0) {\n        var long = item.center[0];\n        var lat = item.center[1];\n        var place_name = item.place_name;\n        setPlaceName(place_name);\n        const Coordinates = {\n          lat,\n          long,\n          place_name\n        };\n        console.log('getLocation', Coordinates);\n        localStorage.setItem('CustomerCurrentLoc', JSON.stringify(Coordinates));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewPort,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onViewportChange: viewport => {\n        setViewPort(viewport);\n      } // mapStyle='mapbox://styles/fahdshaikh/ckhed9kw802un1arxojsobt0m'\n      ,\n      mapStyle: \"mapbox://styles/mapbox/light-v10\",\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        latitude: data.lat,\n        longitude: data.long,\n        children: [/*#__PURE__*/_jsxDEV(Loc, {\n          src: \"/Icons/mapbox.svg\",\n          alt: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), data.area]\n      }, data.lat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeolocateControl, {\n        style: geolocateStyle,\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserLocation: true,\n        onGeolocate: e => {\n          console.log('onGeolocate', e);\n          setCustomerCoords({\n            lat: e.coords.latitude,\n            long: e.coords.longitude\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: navStyle,\n        children: /*#__PURE__*/_jsxDEV(NavigationControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col mb-5\",\n      style: {\n        padding: '0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Address\",\n        placeholder: \"\",\n        fullWidth: true,\n        variant: \"outlined\",\n        style: {\n          marginLeft: '0px',\n          marginTop: '5px',\n          borderRadius: '0px'\n        },\n        value: placeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Map, \"XDoaLFh6S2Dvp3B5dbg0mps1prk=\");\n\n_c2 = Map;\nexport default Map; // https://api.mapbox.com/directions/v5/mapbox/driving/73.787679,18.633725;77.620895,12.946148?alternatives=false&geometries=geojson&steps=false&access_token=pk.eyJ1IjoiZmFoZHNoYWlraCIsImEiOiJja2gzYzB3a3YwaXlsMnJvaWJ3ZDdiYzBpIn0.EC5-vAFFL-32D0ZCkCkQFg\n// long:73.787679,18.633725;77.620895,12.946148\n// lat:18.633725\n// 0:77.620895\n// 1:12.946148\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Loc\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"sources":["F:/node/SwiggyClone-main/SwiggyClone-main/frontend/src/Components/CheckoutPage/Customer/Map.jsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","GeolocateControl","NavigationControl","styled","axios","TextField","Loc","img","MAPBOX_TOKEN","Map","customerCoords","setCustomerCoords","placeName","setPlaceName","data","JSON","parse","localStorage","getItem","viewPort","setViewPort","width","height","latitude","lat","longitude","long","zoom","geolocateStyle","position","right","bottom","margin","navStyle","Geolocation","config","method","url","headers","then","response","console","log","getLocation","features","catch","error","map","item","i","center","place_name","Coordinates","setItem","stringify","viewport","area","enableHighAccuracy","e","coords","padding","marginLeft","marginTop","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMapGL, {\n    Marker,\n    GeolocateControl,\n    NavigationControl,\n} from 'react-map-gl';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\n\nconst Loc = styled.img`\n    height: 20px;\n    width: 20px;\n`;\n\nconst MAPBOX_TOKEN =\n    'pk.eyJ1IjoiZmFoZHNoYWlraCIsImEiOiJja2gzYzB3a3YwaXlsMnJvaWJ3ZDdiYzBpIn0.EC5-vAFFL-32D0ZCkCkQFg';\n\nconst Map = () => {\n    const [customerCoords, setCustomerCoords] = useState({});\n    const [placeName, setPlaceName] = useState('');\n    const data = JSON.parse(localStorage.getItem('Coordinates')); // Area Search Coordinates\n\n    const [viewPort, setViewPort] = useState({\n        width: 'inherit',\n        height: 'inherit',\n        latitude: data.lat, // 18.634363666666665  initially showing  Area Search Coordinates\n        longitude: data.long, // 73.78761533333333\n        zoom: 10,\n    });\n\n    const geolocateStyle = {\n        position: 'absolute',\n        right: -3,\n        bottom: 30,\n        margin: 10,\n    };\n\n    const navStyle = {\n        position: 'absolute',\n        right: -3,\n        bottom: 70,\n        margin: 10,\n    };\n    // console.log(customerCoords);\n\n    useEffect(() => {\n        Geolocation(customerCoords);\n    }, [customerCoords]);\n\n    const Geolocation = (data) => {\n        var config = {\n            method: 'get',\n            url: `https://api.mapbox.com/geocoding/v5/mapbox.places/${data.long},${data.lat}.json?country=IN&access_token=${MAPBOX_TOKEN}`,\n            headers: {},\n        };\n\n        axios(config)\n            .then(function (response) {\n                console.log('Geolocation', response.data);\n                getLocation(response.data.features);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    const getLocation = (data) => {\n        data.map((item, i) => {\n            if (i === 0) {\n                var long = item.center[0];\n                var lat = item.center[1];\n                var place_name = item.place_name;\n                setPlaceName(place_name);\n\n                const Coordinates = {\n                    lat,\n                    long,\n                    place_name,\n                };\n                console.log('getLocation', Coordinates);\n                localStorage.setItem(\n                    'CustomerCurrentLoc',\n                    JSON.stringify(Coordinates),\n                );\n            }\n        });\n    };\n\n    return (\n        <>\n            <ReactMapGL\n                {...viewPort}\n                mapboxApiAccessToken={MAPBOX_TOKEN}\n                onViewportChange={(viewport) => {\n                    setViewPort(viewport);\n                }}\n                // mapStyle='mapbox://styles/fahdshaikh/ckhed9kw802un1arxojsobt0m'\n                mapStyle='mapbox://styles/mapbox/light-v10'\n            >\n                <Marker\n                    key={data.lat}\n                    latitude={data.lat}\n                    longitude={data.long}\n                >\n                    <Loc src='/Icons/mapbox.svg' alt='location' />\n                    {data.area}\n                </Marker>\n                <GeolocateControl\n                    style={geolocateStyle}\n                    positionOptions={{ enableHighAccuracy: true }}\n                    trackUserLocation={true}\n                    showUserLocation={true}\n                    onGeolocate={(e) => {\n                        console.log('onGeolocate', e);\n                        setCustomerCoords({\n                            lat: e.coords.latitude,\n                            long: e.coords.longitude,\n                        });\n                    }}\n                />\n\n                <div style={navStyle}>\n                    <NavigationControl />\n                </div>\n            </ReactMapGL>\n            <div\n                className='col mb-5'\n                style={{\n                    padding: '0px',\n                }}\n            >\n                <TextField\n                    label='Address'\n                    placeholder=''\n                    fullWidth\n                    variant='outlined'\n                    style={{\n                        marginLeft: '0px',\n                        marginTop: '5px',\n                        borderRadius: '0px',\n                    }}\n                    value={placeName}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default Map;\n\n// https://api.mapbox.com/directions/v5/mapbox/driving/73.787679,18.633725;77.620895,12.946148?alternatives=false&geometries=geojson&steps=false&access_token=pk.eyJ1IjoiZmFoZHNoYWlraCIsImEiOiJja2gzYzB3a3YwaXlsMnJvaWJ3ZDdiYzBpIn0.EC5-vAFFL-32D0ZCkCkQFg\n\n// long:73.787679,18.633725;77.620895,12.946148\n// lat:18.633725\n\n// 0:77.620895\n// 1:12.946148\n"]},"metadata":{},"sourceType":"module"}