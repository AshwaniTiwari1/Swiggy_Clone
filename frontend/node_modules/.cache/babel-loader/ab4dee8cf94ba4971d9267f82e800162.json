{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\node\\\\SwiggyClone-main\\\\SwiggyClone-main\\\\frontend\\\\src\\\\Components\\\\RestautantPage\\\\Customer\\\\Location.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport styled from 'styled-components';\nconst City = styled.button`\n    background: #fff;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.2;\n    letter-spacing: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    border-radius: 0px;\n    border: 0px;\n    border-bottom: 2px solid black;\n    &:hover {\n        cursor: pointer;\n        color: #fc8019;\n        border-bottom: 2px solid #fc8019;\n    }\n`;\n_c = City;\nconst useStyles = makeStyles({\n  list: {\n    width: 450\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\nexport default function TemporaryDrawer() {\n  _s();\n\n  const [area, setArea] = useState('');\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false\n  });\n  useEffect(() => {\n    if (localStorage.getItem('Coordinates') == null) {\n      setArea('Bangaluru');\n    } else {\n      setArea(JSON.parse(localStorage.getItem('Coordinates')).area);\n    }\n  }, []); // console.log(area);\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: \"Location Search Bar and Locate Me\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(City, {\n      type: \"button\",\n      className: \"btn btn-md text-capitalize\" // onClick={toggleDrawer('left', true)}\n      ,\n      onClick: toggleDrawer('left', false),\n      children: area\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: 'left',\n      open: state['left'],\n      onClose: toggleDrawer('left', false),\n      children: list('left')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TemporaryDrawer, \"oifDwT4F0p9DNSZe7fJVMFmde34=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = TemporaryDrawer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"City\");\n$RefreshReg$(_c2, \"TemporaryDrawer\");","map":{"version":3,"sources":["F:/node/SwiggyClone-main/SwiggyClone-main/frontend/src/Components/RestautantPage/Customer/Location.jsx"],"names":["React","useState","useEffect","clsx","makeStyles","Drawer","styled","City","button","useStyles","list","width","fullList","TemporaryDrawer","area","setArea","classes","state","setState","left","localStorage","getItem","JSON","parse","toggleDrawer","anchor","open","event","type","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport styled from 'styled-components';\n\nconst City = styled.button`\n    background: #fff;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.2;\n    letter-spacing: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    border-radius: 0px;\n    border: 0px;\n    border-bottom: 2px solid black;\n    &:hover {\n        cursor: pointer;\n        color: #fc8019;\n        border-bottom: 2px solid #fc8019;\n    }\n`;\n\nconst useStyles = makeStyles({\n    list: {\n        width: 450,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\nexport default function TemporaryDrawer() {\n    const [area, setArea] = useState('');\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n\n    useEffect(() => {\n        if (localStorage.getItem('Coordinates') == null) {\n            setArea('Bangaluru');\n        } else {\n            setArea(JSON.parse(localStorage.getItem('Coordinates')).area);\n        }\n    }, []);\n    // console.log(area);\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (\n            event.type === 'keydown' &&\n            (event.key === 'Tab' || event.key === 'Shift')\n        ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role='presentation'\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            Location Search Bar and Locate Me\n        </div>\n    );\n\n    return (\n        <div>\n            <City\n                type='button'\n                className='btn btn-md text-capitalize'\n                // onClick={toggleDrawer('left', true)}\n                onClick={toggleDrawer('left', false)}\n            >\n                {area}\n            </City>\n            <Drawer\n                anchor={'left'}\n                open={state['left']}\n                onClose={toggleDrawer('left', false)}\n            >\n                {list('left')}\n            </Drawer>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}